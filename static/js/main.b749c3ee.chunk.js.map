{"version":3,"sources":["components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App.jsx","index.js"],"names":["module","exports","Profile","user","className","css","profile","description","src","avatar","alt","username","class","tag","location","stats","followers","views","likes","Statistics","title","statistics","list","map","stat","item","label","percentage","id","FriendListItem","name","isOnline","status","noActive","width","FriendList","friends","friendList","friend","TransactionHistory","items","table","thead","tbody","tr","td","type","amount","currency","App","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b749c3ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1jlVU\",\"item\":\"FriendList_item__21kXQ\",\"avatar\":\"FriendList_avatar__1NKFY\",\"status\":\"FriendList_status__5WwB4\",\"noActive\":\"FriendList_noActive__PuXn3 FriendList_status__5WwB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__12m26\",\"thead\":\"TransactionHistory_thead__2lUr9\",\"tbody\":\"TransactionHistory_tbody__3Cpo6\",\"tr\":\"TransactionHistory_tr__3H0Uc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__hL-mW\",\"title\":\"Statistics_title__bePxh\",\"list\":\"Statistics_list__2vEhc\",\"item\":\"Statistics_item__3y6k8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3GGgu\",\"description\":\"Profile_description__1X1E2\"};","import PropTypes from 'prop-types';\nimport css from './Profile.module.css';\n\nexport const Profile = ({ user }) => {\n  return (\n    <div className={css.profile}>\n      <div className={css.description}>\n        <img src={user.avatar} alt={user.username} class=\"avatar\" />\n        <p class=\"name\">{user.username}</p>\n        <p class=\"tag\">{user.tag}</p>\n        <p class=\"location\">{user.location}</p>\n      </div>\n\n      <ul class=\"stats\">\n        <li>\n          <span class=\"label\">Followers</span>\n          <span class=\"quantity\">{user.stats.followers}</span>\n        </li>\n        <li>\n          <span class=\"label\">Views</span>\n          <span class=\"quantity\">{user.stats.views}</span>\n        </li>\n        <li>\n          <span class=\"label\">Likes</span>\n          <span class=\"quantity\">{user.stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }),\n  }),\n};\n","import PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <section className={css.statistics}>\n      <h2 className={css.title}>{title && `${title}`}</h2>\n      <ul className={css.list}>\n        {stats.map(stat => (\n          <li className={css.item} key={stat.id}>\n            <span class=\"label\">{stat.label}</span>\n            <span class=\"percentage\">{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport css from './FriendList.module.css';\n\nexport const FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <>\n      <li className={css.item}>\n        <span className={isOnline ? `${css.status}` : `${css.noActive}`}></span>\n        <img className={css.avatar} src={avatar} alt={name} width=\"48\" />\n        <p className={css.name}>{name}</p>\n      </li>\n    </>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport css from './FriendList.module.css';\nimport { FriendListItem } from './FriendListItem';\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <ul className={css.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport css from './TransactionHistory.module.css';\n\nexport const TransactionHistory = ({ items }) => {\n  return (\n    <table className={css.table}>\n      <thead className={css.thead}>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody className={css.tbody}>\n        {items.map(item => (\n          <tr className={css.tr} key={item.id}>\n            <td className={css.td}>{item.type}</td>\n            <td className={css.td}>{item.amount}</td>\n            <td className={css.td}>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Profile } from './Profile/Profile';\nimport user from './Profile/user.json';\nimport { Statistics } from './Statistics/Statistics';\nimport data from './Statistics/data.json';\nimport { FriendList } from './FriendList/FriendList';\nimport friends from './FriendList/friends.json';\nimport { TransactionHistory } from './TransactionHistory/TransactionHistory';\nimport transactions from './TransactionHistory/transactions.json';\n\nexport const App = () => (\n  <>\n    <Profile user={user} />\n    <Statistics title=\"Upload stats\" stats={data} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}